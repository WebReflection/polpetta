// invoked when a request is received
// can be used for redirects and stuff
this.onrequest = function (event) {
  log(event);
  // pleae note that
  // p.get, p.post, and p.file
  // cannot be possibly available here
  // the only one that works with headers
  // is the p.cookie object, available here too
  var
    p = event.polpetta,
    req = event.request,
    url = event.data
  ;
  switch(true) {
    // here an example to redirect them all into a subfolder
    // if you have this repo ... try
    // ./build/polpetta test/weird\ folder
    // and launch host:port
    // should be the same result of
    // ./build/polpetta test
    // where in the index.njs files
    // have relative and absolute paths
    case /^\//.test(url):
      // redirect internally to keep current url
      p.redirect("/test" + url, true);
      break;
  }
};

this.onstreamfile = function (event) {
  log(event);
};

// invoked when a static file is served
// can be used to serve a different content
this.onstaticfile = function (event) {
  log(event);
  var
    p = event.polpetta,
    res = event.response,
    ext = event.ext.toLowerCase()
  ;
  if (ext == ".md") {
    res.writeHead(
      event.status, p.header("html")
    );
    res.end(
      [ "<!doctype html>",
        "<html>",
          "<head>",
            "<title>js1k with love :: WebReflection</title>",
            '<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />',
            "<style>",
              "body{font-family: sans-serif;background-color: #FFF;color: #000;}",
              "pre,code{background-color: #EEE;}",
              "pre,blockquote{padding: 8px;}",
              "blockquote{background-color: rgba(255, 255, 150, .2);}",
            "</style>",
          "</head>",
          "<body>",
            markdown(
              event.data
            ),
          "</body>",
        "<html>"
      ].join(""),
      p.encoding("text/html")
    );
    // event.preventDefault(); .. or ...
    return false;
  }
};

// invoked when something goes wrong (404, 500, etc)
// can be used for personalized pages
// event.data in this case wil be an instanceof require("fs").Stats
// in case it's a 500, internal server error, stats might be
// secured to return false per each call (isDir(), isFile(), etc)
this.onerror = function (event) {
  log(event);
  var
    p = event.polpetta,
    res = event.response
  ;
  event.preventDefault();
  res.writeHead(
    event.status, p.header("txt")
  );
  res.end([
    " file ",
    "/", event.file.replace(
      p.root, ""
    ),
    " problems"
  ].join(""), "utf-8");
};

function log(e) {
  console.log(e.type);
}

// from JS1K contest - http://webreflection.blogspot.ie/2012/02/js1k-markdown.html
function markdown(f){/*!(C) WebReflection*/for(var b="</code></pre>",c="blockquote>",e="(?:\\r\\n|\\r|\\n|$)",d="(.+?)"+e,a=[],h=["&(?!#?[a-z0-9]+;)","&amp;","<","&lt;",">","&gt;","^(?:\\t| {4})"+d,function(i,j){return a.push(j+"\n")&&"\0"},"^"+d+"=+"+e,"<h1>$1</h1>\n","^"+d+"-+"+e,"<h2>$1</h2>\n","^(#+)\\s*"+d,function(i,l,k,j){return"<h"+(j=l.length)+">"+k.replace(/#+$/,"")+"</h"+j+">\n"},"(?:\\* \\* |- - |\\*\\*|--)[-*][-* ]*"+e,"<hr/>\n","  +"+e,"<br/>","^ *(\\* |\\+ |- |\\d+. )"+d,function(i,l,k,j){return"<"+(j=/^\d/.test(l)?"ol>":"ul>")+"<li>"+markdown(k)+"</li></"+j},"</(ul|ol)>\\s*<\\1>","","([_*]{1,2})([^\\2]+?)(\\1)",function(i,l,k,j){return"<"+(j=l.length==2?"strong>":"em>")+k+"</"+j},"\\[(.+?)\\]\\((.+?) (\"|')(.+?)(\\3)\\)",'<a href="$2" title="$4">$1</a>',"^&gt; "+d,function(i,j){return"<"+c+markdown(j)+"</"+c},"</"+c+"\\s*<"+c,"","(`{1,2})([^\\r\\n]+?)\\1","<code>$2</code>","\\0",function(i){return"<pre><code>"+a.shift()+b},b+"\\s*<pre><code>",""],g=0;g<h.length;){f=f.replace(RegExp(h[g++],"gm"),h[g++])}return f};